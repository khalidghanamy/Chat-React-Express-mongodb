{"ast":null,"code":"var _jsxFileName = \"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Chatinput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Picker from \"emoji-picker-react\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { set } from 'mongoose';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chatinput() {\n  _s();\n\n  const [showEmojiPicker, setshowEmojiPicker] = useState(false);\n  const [msg, setMsg] = useState('');\n\n  const handleEmojiClick = (event, emoji) => {\n    let message = msg;\n    message + -emoji.emoji;\n  };\n\n  const showEmojiPickerHideShow = () => {\n    setshowEmojiPicker(!showEmojiPicker);\n    set(msg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emojy\",\n          children: [/*#__PURE__*/_jsxDEV(BsEmojiSmileFill, {\n            onClick: showEmojiPickerHideShow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Picker, {\n            onEmojiClick: handleEmojiClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text \",\n          placeholder: \"type your message here\",\n          value: msg,\n          onChange: e => setMsg(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(IoMdSend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chatinput, \"fwcijZA1BKupfGBjtVa1RPLPl30=\");\n\n_c = Chatinput;\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  background-color: #080420;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        color: #ffff00c8;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n        background-color: #080420;\n        box-shadow: 0 5px 10px #9a86f3;\n        border-color: #9a86f3;\n        .emoji-scroll-wrapper::-webkit-scrollbar {\n          background-color: #080420;\n          width: 5px;\n          &-thumb {\n            background-color: #9a86f3;\n          }\n        }\n        .emoji-categories {\n          button {\n            filter: contrast(0);\n          }\n        }\n        .emoji-search {\n          background-color: transparent;\n          border-color: #9a86f3;\n        }\n        .emoji-group:before {\n          background-color: #080420;\n        }\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: #ffffff34;\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n      &::selection {\n        background-color: #9a86f3;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\n_c2 = Container;\nexport default Chatinput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chatinput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","styled","Picker","IoMdSend","BsEmojiSmileFill","set","Chatinput","showEmojiPicker","setshowEmojiPicker","msg","setMsg","handleEmojiClick","event","emoji","message","showEmojiPickerHideShow","e","target","value","Container","div"],"sources":["/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Chatinput.jsx"],"sourcesContent":["import React,{useState} from 'react'\nimport styled from 'styled-components'\nimport Picker from \"emoji-picker-react\"\nimport { IoMdSend} from \"react-icons/io\"\nimport {BsEmojiSmileFill} from \"react-icons/bs\"\nimport { set } from 'mongoose'\nfunction Chatinput() {\n\n    const [showEmojiPicker,setshowEmojiPicker]=useState(false);\n    const [msg, setMsg] = useState('');\n    const handleEmojiClick=(event,emoji)=>{\n        let message = msg;\n        message + -emoji.emoji\n    }\n\n    const showEmojiPickerHideShow =()=>{\n        setshowEmojiPicker(!showEmojiPicker)\n        set(msg)\n    }\n  return (\n      <>\n      <Container>\n          <div className='button-container'>\n              <div className='emojy'>\n                  <BsEmojiSmileFill onClick={showEmojiPickerHideShow}/>\n                  {\n                      showEmojiPicker && <Picker onEmojiClick={handleEmojiClick}/>\n                  }\n              </div>\n          </div>\n          <form className='input-container'>\n              <input type='text ' placeholder=\"type your message here\" value={msg} onChange={(e)=> setMsg(e.target.value)}/>\n              <button className='submit'> \n               <IoMdSend/>\n              </button>\n              </form>\n      </Container>\n      \n      </>\n  )\n}\n\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  background-color: #080420;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        color: #ffff00c8;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n        background-color: #080420;\n        box-shadow: 0 5px 10px #9a86f3;\n        border-color: #9a86f3;\n        .emoji-scroll-wrapper::-webkit-scrollbar {\n          background-color: #080420;\n          width: 5px;\n          &-thumb {\n            background-color: #9a86f3;\n          }\n        }\n        .emoji-categories {\n          button {\n            filter: contrast(0);\n          }\n        }\n        .emoji-search {\n          background-color: transparent;\n          border-color: #9a86f3;\n        }\n        .emoji-group:before {\n          background-color: #080420;\n        }\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: #ffffff34;\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n      &::selection {\n        background-color: #9a86f3;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\nexport default Chatinput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,QAAT,QAAwB,gBAAxB;AACA,SAAQC,gBAAR,QAA+B,gBAA/B;AACA,SAASC,GAAT,QAAoB,UAApB;;;;AACA,SAASC,SAAT,GAAqB;EAAA;;EAEjB,MAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAqCR,QAAQ,CAAC,KAAD,CAAnD;EACA,MAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;;EACA,MAAMW,gBAAgB,GAAC,CAACC,KAAD,EAAOC,KAAP,KAAe;IAClC,IAAIC,OAAO,GAAGL,GAAd;IACAK,OAAO,GAAG,CAACD,KAAK,CAACA,KAAjB;EACH,CAHD;;EAKA,MAAME,uBAAuB,GAAE,MAAI;IAC/BP,kBAAkB,CAAC,CAACD,eAAF,CAAlB;IACAF,GAAG,CAACI,GAAD,CAAH;EACH,CAHD;;EAIF,oBACI;IAAA,uBACA,QAAC,SAAD;MAAA,wBACI;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACI;UAAK,SAAS,EAAC,OAAf;UAAA,wBACI,QAAC,gBAAD;YAAkB,OAAO,EAAEM;UAA3B;YAAA;YAAA;YAAA;UAAA,QADJ,EAGQR,eAAe,iBAAI,QAAC,MAAD;YAAQ,YAAY,EAAEI;UAAtB;YAAA;YAAA;YAAA;UAAA,QAH3B;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAM,SAAS,EAAC,iBAAhB;QAAA,wBACI;UAAO,IAAI,EAAC,OAAZ;UAAoB,WAAW,EAAC,wBAAhC;UAAyD,KAAK,EAAEF,GAAhE;UAAqE,QAAQ,EAAGO,CAAD,IAAMN,MAAM,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;QAA3F;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,SAAS,EAAC,QAAlB;UAAA,uBACC,QAAC,QAAD;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAqBD;;GAlCQZ,S;;KAAAA,S;AAoCT,MAAMa,SAAS,GAAGlB,MAAM,CAACmB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5FA;MAAMD,S;AA6FN,eAAeb,SAAf"},"metadata":{},"sourceType":"module"}