{"ast":null,"code":"var _jsxFileName = \"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../assets/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Contacts(_ref) {\n  _s();\n\n  let {\n    contacts,\n    currentUser\n  } = _ref;\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    console.log(contacts);\n\n    if (currentUser) {\n      setCurrentUserImage(currentUser.avatarImage);\n      setCurrentUserName(currentUser.username);\n    }\n  }, [currentUser]);\n\n  const changeCurrentChat = (index, contact) => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentUserImage && currentUserName && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"snappy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts\",\n        children: [contacts.map((contact, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `contact ${index === currentSelected ? \"selected\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/svg+xml;base64,${contact.avatarImage}`,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"username\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: contact.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 37\n            }, this)\n          }, void 0, false);\n        }), contacts.map((contact, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `contact ${index === currentSelected ? \"selected\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/svg+xml;base64,${contact.avatarImage}`,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"username\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: contact.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentUuser\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${currentUserImage}\n                       `,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contacts, \"wTP9W2PvLtuLn6SrLcOO3R23lWI=\");\n\n_c = Contacts;\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 75% 15%;\n  overflow: hidden;\n  background-color: #080420;\n  .brand {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    img {\n      height: 1rem;\n    }\n    h3 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.7rem;\n    &::-webkit-scrollbar{\n      width: 0.3rem;\n      &\n    }\n    .contact {\n      background-color: #ffffff39;\n      min-height: 4rem;\n      width: 90%;\n      border-radius: 0.2rem;\n      padding: 0.5rem;\n      cursor: pointer;\n      gap: 1rem;\n      align-items: center;\n      display: flex;\n      transition: 0.5s ease-in-out;\n      img {\n        height: 4rem;\n      }\n     \n      \n    }\n}\n  .currentUuser {\n      background-color: #07032aa5;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 2rem;\n      .avatar {\n        img {\n          height: 4rem;\n          max-inline-size: 100%;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }}\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n      .selected {\n        background-color: #312095;\n      }\n      @media screen and (min-width: 720px) and (max-width:1080px){\n        gap:0.5rem;\n        .username{\n          h3{\n            font-size:1rem ;\n          }\n        }\n      }\n    \n`;\n_c2 = Container;\nexport default Contacts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","logo","Contacts","contacts","currentUser","currentUserName","setCurrentUserName","undefined","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","console","log","avatarImage","username","changeCurrentChat","index","contact","map","Container","div"],"sources":["/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Contacts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../assets/logo.svg\";\nfunction Contacts({ contacts, currentUser }) {\n    const [currentUserName, setCurrentUserName] = useState(undefined);\n    const [currentUserImage, setCurrentUserImage] = useState(undefined);\n    const [currentSelected, setCurrentSelected] = useState(undefined);\n\n    useEffect(() => {\n        console.log(contacts);\n        if (currentUser) {\n            setCurrentUserImage(currentUser.avatarImage);\n            setCurrentUserName(currentUser.username);\n        }\n    }, [currentUser]);\n    const changeCurrentChat = (index, contact) => { };\n    return (\n        <>\n            {currentUserImage && currentUserName && (\n                <Container>\n                    <div className=\"brand\">\n                        <img src={logo} alt=\"logo\" />\n                        <h3>snappy</h3>\n                    </div>\n                    <div className=\"contacts\">\n                        {contacts.map((contact, index) => {\n                            return (\n                                <>\n                                    <div\n                                        className={`contact ${index === currentSelected ? \"selected\" : \"\"\n                                            }`}\n                                        key={index}\n                                    >\n                                        <img\n                                            src={`data:image/svg+xml;base64,${contact.avatarImage}`}\n                                            alt=\"avatar\"\n                                        />\n                                        <div className=\"username\">\n                                            <h3>{contact.username}</h3>\n                                        </div>\n                                    </div>\n                                </>\n                            );\n                        })}\n                         {contacts.map((contact, index) => {\n                            return (\n                                <>\n                                    <div\n                                        className={`contact ${index === currentSelected ? \"selected\" : \"\"\n                                            }`}\n                                        key={index}\n                                    >\n                                        <img\n                                            src={`data:image/svg+xml;base64,${contact.avatarImage}`}\n                                            alt=\"avatar\"\n                                        />\n                                        <div className=\"username\">\n                                            <h3>{contact.username}</h3>\n                                        </div>\n                                    </div>\n                                </>\n                            );\n                        })}\n                    </div>\n                    <div className=\"currentUuser\">\n                        <div className=\"avatar\">\n                            <img\n                                src={`data:image/svg+xml;base64,${currentUserImage}\n                       `}\n                                alt=\"avatar\"\n                            />\n                        </div>\n                            <div className=\"username\">\n                                <h3>{currentUserName}</h3>\n                            </div>\n                    </div>\n                </Container>\n            )}\n        </>\n    );\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 75% 15%;\n  overflow: hidden;\n  background-color: #080420;\n  .brand {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    img {\n      height: 1rem;\n    }\n    h3 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.7rem;\n    &::-webkit-scrollbar{\n      width: 0.3rem;\n      &\n    }\n    .contact {\n      background-color: #ffffff39;\n      min-height: 4rem;\n      width: 90%;\n      border-radius: 0.2rem;\n      padding: 0.5rem;\n      cursor: pointer;\n      gap: 1rem;\n      align-items: center;\n      display: flex;\n      transition: 0.5s ease-in-out;\n      img {\n        height: 4rem;\n      }\n     \n      \n    }\n}\n  .currentUuser {\n      background-color: #07032aa5;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 2rem;\n      .avatar {\n        img {\n          height: 4rem;\n          max-inline-size: 100%;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }}\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n      .selected {\n        background-color: #312095;\n      }\n      @media screen and (min-width: 720px) and (max-width:1080px){\n        gap:0.5rem;\n        .username{\n          h3{\n            font-size:1rem ;\n          }\n        }\n      }\n    \n`;\nexport default Contacts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}