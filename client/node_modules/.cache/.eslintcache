[{"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/index.js":"1","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/App.js":"2","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/pages/Register.jsx":"3","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/pages/Chat.jsx":"4","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/pages/Login.jsx":"5","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/utils/ApiRoutes.js":"6","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/pages/SetAvatar.jsx":"7","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Contacts.jsx":"8","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Welcome.jsx":"9","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/ChatHere.jsx":"10","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Logout.jsx":"11","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Chatinput.jsx":"12","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Messages.jsx":"13"},{"size":255,"mtime":1651955405595,"results":"14","hashOfConfig":"15"},{"size":588,"mtime":1652109189519,"results":"16","hashOfConfig":"15"},{"size":4535,"mtime":1652051544826,"results":"17","hashOfConfig":"15"},{"size":2275,"mtime":1652110695846,"results":"18","hashOfConfig":"15"},{"size":3965,"mtime":1652131731639,"results":"19","hashOfConfig":"15"},{"size":255,"mtime":1652046925153,"results":"20","hashOfConfig":"15"},{"size":3503,"mtime":1652106864454,"results":"21","hashOfConfig":"15"},{"size":4414,"mtime":1652131682861,"results":"22","hashOfConfig":"15"},{"size":705,"mtime":1652108666192,"results":"23","hashOfConfig":"15"},{"size":1379,"mtime":1652627352679,"results":"24","hashOfConfig":"15"},{"size":672,"mtime":1652112603928,"results":"25","hashOfConfig":"15"},{"size":3376,"mtime":1652629830958,"results":"26","hashOfConfig":"15"},{"size":211,"mtime":1652626832090,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"17200tk",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/index.js",[],[],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/App.js",[],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/pages/Register.jsx",["70","71"],[],"import React ,{useState,useEffect}from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components'\nimport Logo from '../assets/logo.svg'\nimport {ToastContainer,toast} from \"react-toastify\"\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from \"axios\"\nimport { registerRoute } from '../utils/ApiRoutes';\nfunction Register() {\n    const navigate= useNavigate()\n    const [values,setValues]=useState({\n        username:'',\n        email:'',\n        password:'',\n        confirmPassword:'',\n    });\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        \n      };\n    const toastOption={\n        position:\"top-right\",\n        autoClose:8000,\n        pauseOnHover:true,\n        draggable:true,\n        theme:\"dark\"\n     }\n //to save the login state of the user\n useEffect(()=>{\n    if(localStorage.getItem(\"chat-app-user\")){\n        navigate(\"/\")\n    }\n},[])\n    const handleSubmit=async (event)=>{\n        event.preventDefault();\n       if(handleValidation()){\n        \n\n        const {password,username,email}=values;\n        const {data}=await axios.post(registerRoute,{\n            username,email,password\n        })\n       if(data.status===false){\n           toast.error(data.msg,toastOption)\n       }\n       if(data.status===true){\n           localStorage.setItem(\"chat-app-user\",JSON.stringify(data.user))\n           navigate(\"/\")\n       }\n       \n       } ;\n    }\n\n    const handleChange=(event)=>{\n        setValues({...values,[event.target.name]:event.target.value})\n    }\n\n    const handleValidation = ()=>{\n        const {password,confirmPassword,username,email}=values;\n        if(password!==confirmPassword){\n          \n         toast.error(' passowrd and confirm password should be same.',toastOption);\n         return false;\n        }else if (username.length<3){\n            toast.error(' username must be greater than 3',toastOption);\n            return false;\n\n        }else if (password.length<8){\n            toast.error(' password must at least than 8',toastOption);\n            return false;\n\n        }else if (email===\"\"){\n            toast.error(' email is required',toastOption);\n            return false;\n\n        }\n        return true\n        ;\n    }\n\n  return (\n   <>\n\n    <FormContainer>\n        <form onSubmit={(event)=>handleSubmit(event)}>\n        <div className='brand'>\n    <img src={Logo} alt='logo'/>\n    <h1>snappy</h1>\n        </div>\n        <input type=\"text\" placeholder=\"Username\" name=\"username\"  onChange={(event)=> handleChange(event)}  />\n        <input type=\"email\" placeholder=\"email\" name=\"email\"  onChange={(event)=> handleChange(event)}  />\n        <input type=\"password\" placeholder=\"password\" name=\"password\"  onChange={(event)=> handleChange(event)}  />\n        <input type=\"password\" placeholder=\"confirmpassword\" name=\"confirmPassword\"  onChange={(event)=> handleChange(event)}  />\n        <button type='submit' >Create user</button>\n        <span> Already have account? \n        <Link to='/login'>   Login</Link>\n        </span>\n        </form>\n    </FormContainer>\n    <ToastContainer>\n\n    </ToastContainer>\n\n   </>\n  )\n}\nconst FormContainer = styled.div`\n\nheight:100vh;\nwidth:100vw;\ndisplay:flex;\nflex-direction:column;\njustify-content:center;\ngap:1rem;\nalign-items:center;\nbackground-color:#131324;\n.brand{\n    display:flex;\n    align-items:center;\n    gap:1rem;\n    justify-content:center;\nimg{\n    height:5rem;\n}\n\nh1{\n    color:white;\n    text-transform:upppercase;\n\n}\n}\nform{\n    display:flex;\n    flex-direction:column;\n    gap:2rem;\n    background-color:#00000076;\n    padding:3rem 5rem;\n    border-radius:2rem;\n    input{\n        border-radius:0.4rem;\n        background-color: transparent;\n        padding:1rem;\n        color:white;\n        width:100%;\n        font-size:1rem;\n        border:0.1rem solid #4e0eff;\n        &:focus{\n            border:0.1rem solid green;\n            outline:none;\n\n        }\n    }\n    button{\n        background-color: #997af0;\n        color:white;\n        padding: 1rem 2rem;\n        border:none;\n        font-weight:bold;\n        cursor:pointer;\n        border-radius:0.4rem;\n        font-size:1rem;\n        text-transform:uppercase;\n        transition:0.5s ease-in-out;\n        &:hover{\n        background-color: #4e0eff;\n            \n        }\n\n    }\n    span{\n        color:white;\n        text-transform:uppercase;\n        a{\n            color:#4e0eff;\n        text-decoration:none;\n        font-weight:bold;\n\n        \n        }\n    }\n}\n\n`;\nexport default Register","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/pages/Chat.jsx",["72","73"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { allUsersRoute } from \"../utils/ApiRoutes\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\nimport ChatHere from \"../components/ChatHere\";\n\nfunction Chat() {\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [isLoaded, setisLoaded] = useState(false);\n\n  useEffect(() => {\n    async function getMe() {\n      if (!localStorage.getItem(\"chat-app-user\")) {\n        navigate(\"/login\");\n      } else {\n        setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n        setisLoaded(true);\n      }\n    }\n    getMe();\n  }, []);\n\n  useEffect(() => {\n    async function myuseEff(currentUser) {\n      if (currentUser) {\n        if (currentUser.isAvatarImage) {\n          const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n          setContacts(data.data);\n        } else {\n          navigate(\"/setAvatar\");\n        }\n      }\n    }\n    myuseEff(currentUser);\n  }, [currentUser]);\n  const handleChatChange = (chat) => {\n    setCurrentChat(chat);\n  };\n  return (\n    <Container>\n      <div className=\"container\">\n        <Contacts\n          contacts={contacts}\n          currentUser={currentUser}\n          changeChat={handleChatChange}\n        />\n        {isLoaded && currentChat === undefined ? (\n          <Welcome currentUser={currentUser} />\n        ) : (\n          <ChatHere currentChat={currentChat\n        } />\n        )}\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #131324;\n\n  .container {\n      margin-left: 7%;\n      height: 85vh;\n      width: 85vw;\n      background-color: #010116;\n      display: grid;\n      justify-content: center;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n\nexport default Chat;\n","/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/pages/Login.jsx",["74","75"],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/utils/ApiRoutes.js",[],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/pages/SetAvatar.jsx",[],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Contacts.jsx",["76"],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Welcome.jsx",[],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/ChatHere.jsx",["77"],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Logout.jsx",[],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Chatinput.jsx",[],[],"/media/khalid/New Volume/projects/mearn/superChat/Chat-React-Express-mongodb/client/src/components/Messages.jsx",[],[],{"ruleId":"78","severity":1,"message":"79","line":17,"column":11,"nodeType":"80","messageId":"81","endLine":17,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":33,"column":3,"nodeType":"84","endLine":33,"endColumn":5,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"83","line":27,"column":6,"nodeType":"84","endLine":27,"endColumn":8,"suggestions":"86"},{"ruleId":"82","severity":1,"message":"83","line":41,"column":6,"nodeType":"84","endLine":41,"endColumn":19,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"79","line":17,"column":11,"nodeType":"80","messageId":"81","endLine":17,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":34,"column":8,"nodeType":"84","endLine":34,"endColumn":10,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"89","line":14,"column":8,"nodeType":"84","endLine":14,"endColumn":21,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":17,"column":17,"nodeType":"93","endLine":19,"endColumn":19},"no-unused-vars","'headers' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["94"],["95"],["96"],["97"],"React Hook useEffect has a missing dependency: 'contacts'. Either include it or remove the dependency array.",["98"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"99","fix":"100"},{"desc":"99","fix":"101"},{"desc":"102","fix":"103"},{"desc":"99","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [navigate]",{"range":"107","text":"108"},{"range":"109","text":"108"},"Update the dependencies array to be: [currentUser, navigate]",{"range":"110","text":"111"},{"range":"112","text":"108"},"Update the dependencies array to be: [contacts, currentUser]",{"range":"113","text":"114"},[922,924],"[navigate]",[917,919],[1272,1285],"[currentUser, navigate]",[913,915],[613,626],"[contacts, currentUser]"]