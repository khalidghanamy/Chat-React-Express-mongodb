import {
  require_react
} from "./chunk-FOD3U3RE.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues,
  __toESM
} from "./chunk-WWO6H54A.js";

// node_modules/react-toastify/dist/react-toastify.esm.js
var import_react = __toESM(require_react());

// node_modules/clsx/dist/clsx.m.js
function toVal(mix) {
  var k2, y2, str = "";
  if (typeof mix === "string" || typeof mix === "number") {
    str += mix;
  } else if (typeof mix === "object") {
    if (Array.isArray(mix)) {
      for (k2 = 0; k2 < mix.length; k2++) {
        if (mix[k2]) {
          if (y2 = toVal(mix[k2])) {
            str && (str += " ");
            str += y2;
          }
        }
      }
    } else {
      for (k2 in mix) {
        if (mix[k2]) {
          str && (str += " ");
          str += k2;
        }
      }
    }
  }
  return str;
}
function clsx_m_default() {
  var i2 = 0, tmp, x2, str = "";
  while (i2 < arguments.length) {
    if (tmp = arguments[i2++]) {
      if (x2 = toVal(tmp)) {
        str && (str += " ");
        str += x2;
      }
    }
  }
  return str;
}

// node_modules/react-toastify/dist/react-toastify.esm.js
function u(e2) {
  return typeof e2 == "number" && !isNaN(e2);
}
function d(e2) {
  return typeof e2 == "boolean";
}
function p(e2) {
  return typeof e2 == "string";
}
function m(e2) {
  return typeof e2 == "function";
}
function f(e2) {
  return p(e2) || m(e2) ? e2 : null;
}
function g(e2) {
  return e2 === 0 || e2;
}
function y(e2) {
  return (0, import_react.isValidElement)(e2) || p(e2) || m(e2) || u(e2);
}
var h = { TOP_LEFT: "top-left", TOP_RIGHT: "top-right", TOP_CENTER: "top-center", BOTTOM_LEFT: "bottom-left", BOTTOM_RIGHT: "bottom-right", BOTTOM_CENTER: "bottom-center" };
var T = { INFO: "info", SUCCESS: "success", WARNING: "warning", ERROR: "error", DEFAULT: "default" };
function v(e2, t2, n2) {
  n2 === void 0 && (n2 = 300);
  const { scrollHeight: o2, style: s2 } = e2;
  requestAnimationFrame(() => {
    s2.minHeight = "initial", s2.height = o2 + "px", s2.transition = "all " + n2 + "ms", requestAnimationFrame(() => {
      s2.height = "0", s2.padding = "0", s2.margin = "0", setTimeout(t2, n2);
    });
  });
}
function E(t2) {
  let { enter: a2, exit: r2, appendPosition: i2 = false, collapse: c2 = true, collapseDuration: l = 300 } = t2;
  return function(t3) {
    let { children: u2, position: d2, preventExitTransition: p2, done: m2, nodeRef: f2, isIn: g2 } = t3;
    const y2 = i2 ? a2 + "--" + d2 : a2, h2 = i2 ? r2 + "--" + d2 : r2, T2 = (0, import_react.useRef)(), E2 = (0, import_react.useRef)(0);
    function b2(e2) {
      if (e2.target !== f2.current)
        return;
      const t4 = f2.current;
      t4.dispatchEvent(new Event("d")), t4.removeEventListener("animationend", b2), t4.removeEventListener("animationcancel", b2), E2.current === 0 && e2.type !== "animationcancel" && (t4.className = T2.current);
    }
    function C2() {
      const e2 = f2.current;
      e2.removeEventListener("animationend", C2), c2 ? v(e2, m2, l) : m2();
    }
    return (0, import_react.useLayoutEffect)(() => {
      !function() {
        const e2 = f2.current;
        T2.current = e2.className, e2.className += " " + y2, e2.addEventListener("animationend", b2), e2.addEventListener("animationcancel", b2);
      }();
    }, []), (0, import_react.useEffect)(() => {
      g2 || (p2 ? C2() : function() {
        E2.current = 1;
        const e2 = f2.current;
        e2.className += " " + h2, e2.addEventListener("animationend", C2);
      }());
    }, [g2]), import_react.default.createElement(import_react.default.Fragment, null, u2);
  };
}
function b(e2, t2) {
  return { content: e2.content, containerId: e2.props.containerId, id: e2.props.toastId, theme: e2.props.theme, type: e2.props.type, data: e2.props.data || {}, isLoading: e2.props.isLoading, icon: e2.props.icon, status: t2 };
}
var C = { list: /* @__PURE__ */ new Map(), emitQueue: /* @__PURE__ */ new Map(), on(e2, t2) {
  return this.list.has(e2) || this.list.set(e2, []), this.list.get(e2).push(t2), this;
}, off(e2, t2) {
  if (t2) {
    const n2 = this.list.get(e2).filter((e3) => e3 !== t2);
    return this.list.set(e2, n2), this;
  }
  return this.list.delete(e2), this;
}, cancelEmit(e2) {
  const t2 = this.emitQueue.get(e2);
  return t2 && (t2.forEach(clearTimeout), this.emitQueue.delete(e2)), this;
}, emit(e2) {
  this.list.has(e2) && this.list.get(e2).forEach((t2) => {
    const n2 = setTimeout(() => {
      t2(...[].slice.call(arguments, 1));
    }, 0);
    this.emitQueue.has(e2) || this.emitQueue.set(e2, []), this.emitQueue.get(e2).push(n2);
  });
} };
function _(e2) {
  const [, o2] = (0, import_react.useReducer)((e3) => e3 + 1, 0), [c2, l] = (0, import_react.useState)([]), h2 = (0, import_react.useRef)(null), T2 = (0, import_react.useRef)(/* @__PURE__ */ new Map()).current, v2 = (e3) => c2.indexOf(e3) !== -1, E2 = (0, import_react.useRef)({ toastKey: 1, displayedToast: 0, count: 0, queue: [], props: e2, containerId: null, isToastActive: v2, getToast: (e3) => T2.get(e3) }).current;
  function _2(e3) {
    let { containerId: t2 } = e3;
    const { limit: n2 } = E2.props;
    !n2 || t2 && E2.containerId !== t2 || (E2.count -= E2.queue.length, E2.queue = []);
  }
  function I2(e3) {
    l((t2) => g(e3) ? t2.filter((t3) => t3 !== e3) : []);
  }
  function O2() {
    const { toastContent: e3, toastProps: t2, staleId: n2 } = E2.queue.shift();
    N2(e3, t2, n2);
  }
  function L2(e3, n2) {
    let _a = n2, { delay: s2, staleId: a2 } = _a, r2 = __objRest(_a, ["delay", "staleId"]);
    if (!y(e3) || function(e4) {
      return !h2.current || E2.props.enableMultiContainer && e4.containerId !== E2.props.containerId || T2.has(e4.toastId) && e4.updateId == null;
    }(r2))
      return;
    const { toastId: c3, updateId: l2, data: v3 } = r2, { props: _3 } = E2, L3 = () => I2(c3), P2 = l2 == null;
    P2 && E2.count++;
    const x2 = { toastId: c3, updateId: l2, containerId: r2.containerId, isLoading: r2.isLoading, theme: r2.theme || _3.theme, icon: r2.icon != null ? r2.icon : _3.icon, isIn: false, key: r2.key || E2.toastKey++, type: r2.type, closeToast: L3, closeButton: r2.closeButton, rtl: _3.rtl, position: r2.position || _3.position, transition: r2.transition || _3.transition, className: f(r2.className || _3.toastClassName), bodyClassName: f(r2.bodyClassName || _3.bodyClassName), style: r2.style || _3.toastStyle, bodyStyle: r2.bodyStyle || _3.bodyStyle, onClick: r2.onClick || _3.onClick, pauseOnHover: d(r2.pauseOnHover) ? r2.pauseOnHover : _3.pauseOnHover, pauseOnFocusLoss: d(r2.pauseOnFocusLoss) ? r2.pauseOnFocusLoss : _3.pauseOnFocusLoss, draggable: d(r2.draggable) ? r2.draggable : _3.draggable, draggablePercent: r2.draggablePercent || _3.draggablePercent, draggableDirection: r2.draggableDirection || _3.draggableDirection, closeOnClick: d(r2.closeOnClick) ? r2.closeOnClick : _3.closeOnClick, progressClassName: f(r2.progressClassName || _3.progressClassName), progressStyle: r2.progressStyle || _3.progressStyle, autoClose: !r2.isLoading && (B2 = r2.autoClose, R2 = _3.autoClose, B2 === false || u(B2) && B2 > 0 ? B2 : R2), hideProgressBar: d(r2.hideProgressBar) ? r2.hideProgressBar : _3.hideProgressBar, progress: r2.progress, role: r2.role || _3.role, deleteToast() {
      const e4 = b(T2.get(c3), "removed");
      T2.delete(c3), C.emit(4, e4);
      const t2 = E2.queue.length;
      if (E2.count = g(c3) ? E2.count - 1 : E2.count - E2.displayedToast, E2.count < 0 && (E2.count = 0), t2 > 0) {
        const e5 = g(c3) ? 1 : E2.props.limit;
        if (t2 === 1 || e5 === 1)
          E2.displayedToast++, O2();
        else {
          const n3 = e5 > t2 ? t2 : e5;
          E2.displayedToast = n3;
          for (let e6 = 0; e6 < n3; e6++)
            O2();
        }
      } else
        o2();
    } };
    var B2, R2;
    m(r2.onOpen) && (x2.onOpen = r2.onOpen), m(r2.onClose) && (x2.onClose = r2.onClose), x2.closeButton = _3.closeButton, r2.closeButton === false || y(r2.closeButton) ? x2.closeButton = r2.closeButton : r2.closeButton === true && (x2.closeButton = !y(_3.closeButton) || _3.closeButton);
    let k2 = e3;
    (0, import_react.isValidElement)(e3) && !p(e3.type) ? k2 = (0, import_react.cloneElement)(e3, { closeToast: L3, toastProps: x2, data: v3 }) : m(e3) && (k2 = e3({ closeToast: L3, toastProps: x2, data: v3 })), _3.limit && _3.limit > 0 && E2.count > _3.limit && P2 ? E2.queue.push({ toastContent: k2, toastProps: x2, staleId: a2 }) : u(s2) ? setTimeout(() => {
      N2(k2, x2, a2);
    }, s2) : N2(k2, x2, a2);
  }
  function N2(e3, t2, n2) {
    const { toastId: o3 } = t2;
    n2 && T2.delete(n2);
    const s2 = { content: e3, props: t2 };
    T2.set(o3, s2), l((e4) => [...e4, o3].filter((e5) => e5 !== n2)), C.emit(4, b(s2, s2.props.updateId == null ? "added" : "updated"));
  }
  return (0, import_react.useEffect)(() => (E2.containerId = e2.containerId, C.cancelEmit(3).on(0, L2).on(1, (e3) => h2.current && I2(e3)).on(5, _2).emit(2, E2), () => C.emit(3, E2)), []), (0, import_react.useEffect)(() => {
    E2.props = e2, E2.isToastActive = v2, E2.displayedToast = c2.length;
  }), { getToastToRender: function(t2) {
    const n2 = /* @__PURE__ */ new Map(), o3 = Array.from(T2.values());
    return e2.newestOnTop && o3.reverse(), o3.forEach((e3) => {
      const { position: t3 } = e3.props;
      n2.has(t3) || n2.set(t3, []), n2.get(t3).push(e3);
    }), Array.from(n2, (e3) => t2(e3[0], e3[1]));
  }, containerRef: h2, isToastActive: v2 };
}
function I(e2) {
  return e2.targetTouches && e2.targetTouches.length >= 1 ? e2.targetTouches[0].clientX : e2.clientX;
}
function O(e2) {
  return e2.targetTouches && e2.targetTouches.length >= 1 ? e2.targetTouches[0].clientY : e2.clientY;
}
function L(e2) {
  const [o2, a2] = (0, import_react.useState)(false), [i2, c2] = (0, import_react.useState)(false), l = (0, import_react.useRef)(null), u2 = (0, import_react.useRef)({ start: 0, x: 0, y: 0, delta: 0, removalDistance: 0, canCloseOnClick: true, canDrag: false, boundingRect: null, didMove: false }).current, d2 = (0, import_react.useRef)(e2), { autoClose: p2, pauseOnHover: f2, closeToast: g2, onClick: y2, closeOnClick: h2 } = e2;
  function T2(t2) {
    if (e2.draggable) {
      u2.didMove = false, document.addEventListener("mousemove", C2), document.addEventListener("mouseup", _2), document.addEventListener("touchmove", C2), document.addEventListener("touchend", _2);
      const n2 = l.current;
      u2.canCloseOnClick = true, u2.canDrag = true, u2.boundingRect = n2.getBoundingClientRect(), n2.style.transition = "", u2.x = I(t2.nativeEvent), u2.y = O(t2.nativeEvent), e2.draggableDirection === "x" ? (u2.start = u2.x, u2.removalDistance = n2.offsetWidth * (e2.draggablePercent / 100)) : (u2.start = u2.y, u2.removalDistance = n2.offsetHeight * (e2.draggablePercent === 80 ? 1.5 * e2.draggablePercent : e2.draggablePercent / 100));
    }
  }
  function v2() {
    if (u2.boundingRect) {
      const { top: t2, bottom: n2, left: o3, right: s2 } = u2.boundingRect;
      e2.pauseOnHover && u2.x >= o3 && u2.x <= s2 && u2.y >= t2 && u2.y <= n2 ? b2() : E2();
    }
  }
  function E2() {
    a2(true);
  }
  function b2() {
    a2(false);
  }
  function C2(t2) {
    const n2 = l.current;
    u2.canDrag && n2 && (u2.didMove = true, o2 && b2(), u2.x = I(t2), u2.y = O(t2), u2.delta = e2.draggableDirection === "x" ? u2.x - u2.start : u2.y - u2.start, u2.start !== u2.x && (u2.canCloseOnClick = false), n2.style.transform = "translate" + e2.draggableDirection + "(" + u2.delta + "px)", n2.style.opacity = "" + (1 - Math.abs(u2.delta / u2.removalDistance)));
  }
  function _2() {
    document.removeEventListener("mousemove", C2), document.removeEventListener("mouseup", _2), document.removeEventListener("touchmove", C2), document.removeEventListener("touchend", _2);
    const t2 = l.current;
    if (u2.canDrag && u2.didMove && t2) {
      if (u2.canDrag = false, Math.abs(u2.delta) > u2.removalDistance)
        return c2(true), void e2.closeToast();
      t2.style.transition = "transform 0.2s, opacity 0.2s", t2.style.transform = "translate" + e2.draggableDirection + "(0)", t2.style.opacity = "1";
    }
  }
  (0, import_react.useEffect)(() => {
    d2.current = e2;
  }), (0, import_react.useEffect)(() => (l.current && l.current.addEventListener("d", E2, { once: true }), m(e2.onOpen) && e2.onOpen((0, import_react.isValidElement)(e2.children) && e2.children.props), () => {
    const e3 = d2.current;
    m(e3.onClose) && e3.onClose((0, import_react.isValidElement)(e3.children) && e3.children.props);
  }), []), (0, import_react.useEffect)(() => (e2.pauseOnFocusLoss && (document.hasFocus() || b2(), window.addEventListener("focus", E2), window.addEventListener("blur", b2)), () => {
    e2.pauseOnFocusLoss && (window.removeEventListener("focus", E2), window.removeEventListener("blur", b2));
  }), [e2.pauseOnFocusLoss]);
  const L2 = { onMouseDown: T2, onTouchStart: T2, onMouseUp: v2, onTouchEnd: v2 };
  return p2 && f2 && (L2.onMouseEnter = b2, L2.onMouseLeave = E2), h2 && (L2.onClick = (e3) => {
    y2 && y2(e3), u2.canCloseOnClick && g2();
  }), { playToast: E2, pauseToast: b2, isRunning: o2, preventExitTransition: i2, toastRef: l, eventHandlers: L2 };
}
function N(t2) {
  let { closeToast: n2, theme: o2, ariaLabel: s2 = "close" } = t2;
  return import_react.default.createElement("button", { className: "Toastify__close-button Toastify__close-button--" + o2, type: "button", onClick: (e2) => {
    e2.stopPropagation(), n2(e2);
  }, "aria-label": s2 }, import_react.default.createElement("svg", { "aria-hidden": "true", viewBox: "0 0 14 16" }, import_react.default.createElement("path", { fillRule: "evenodd", d: "M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z" })));
}
function P(t2) {
  let { delay: n2, isRunning: o2, closeToast: s2, type: a2, hide: r2, className: i2, style: c2, controlledProgress: u2, progress: d2, rtl: p2, isIn: f2, theme: g2 } = t2;
  const y2 = __spreadProps(__spreadValues({}, c2), { animationDuration: n2 + "ms", animationPlayState: o2 ? "running" : "paused", opacity: r2 ? 0 : 1 });
  u2 && (y2.transform = "scaleX(" + d2 + ")");
  const h2 = clsx_m_default("Toastify__progress-bar", u2 ? "Toastify__progress-bar--controlled" : "Toastify__progress-bar--animated", "Toastify__progress-bar-theme--" + g2, "Toastify__progress-bar--" + a2, { "Toastify__progress-bar--rtl": p2 }), T2 = m(i2) ? i2({ rtl: p2, type: a2, defaultClassName: h2 }) : clsx_m_default(h2, i2);
  return import_react.default.createElement("div", { role: "progressbar", "aria-hidden": r2 ? "true" : "false", "aria-label": "notification timer", className: T2, style: y2, [u2 && d2 >= 1 ? "onTransitionEnd" : "onAnimationEnd"]: u2 && d2 < 1 ? null : () => {
    f2 && s2();
  } });
}
P.defaultProps = { type: T.DEFAULT, hide: false };
var x = (t2) => {
  let _a = t2, { theme: n2, type: o2 } = _a, s2 = __objRest(_a, ["theme", "type"]);
  return import_react.default.createElement("svg", __spreadValues({ viewBox: "0 0 24 24", width: "100%", height: "100%", fill: n2 === "colored" ? "currentColor" : "var(--toastify-icon-color-" + o2 + ")" }, s2));
};
var B = { info: function(t2) {
  return import_react.default.createElement(x, __spreadValues({}, t2), import_react.default.createElement("path", { d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z" }));
}, warning: function(t2) {
  return import_react.default.createElement(x, __spreadValues({}, t2), import_react.default.createElement("path", { d: "M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z" }));
}, success: function(t2) {
  return import_react.default.createElement(x, __spreadValues({}, t2), import_react.default.createElement("path", { d: "M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z" }));
}, error: function(t2) {
  return import_react.default.createElement(x, __spreadValues({}, t2), import_react.default.createElement("path", { d: "M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z" }));
}, spinner: function() {
  return import_react.default.createElement("div", { className: "Toastify__spinner" });
} };
var R = (t2) => {
  const { isRunning: n2, preventExitTransition: o2, toastRef: s2, eventHandlers: a2 } = L(t2), { closeButton: r2, children: i2, autoClose: c2, onClick: u2, type: d2, hideProgressBar: f2, closeToast: g2, transition: y2, position: h2, className: T2, style: v2, bodyClassName: E2, bodyStyle: b2, progressClassName: C2, progressStyle: _2, updateId: I2, role: O2, progress: N2, rtl: x2, toastId: R2, deleteToast: k2, isIn: M2, isLoading: D2, icon: w2, theme: A2 } = t2, F2 = clsx_m_default("Toastify__toast", "Toastify__toast-theme--" + A2, "Toastify__toast--" + d2, { "Toastify__toast--rtl": x2 }), S2 = m(T2) ? T2({ rtl: x2, position: h2, type: d2, defaultClassName: F2 }) : clsx_m_default(F2, T2), z2 = !!N2, H2 = B[d2], q2 = { theme: A2, type: d2 };
  let U2 = H2 && H2(q2);
  return w2 === false ? U2 = void 0 : m(w2) ? U2 = w2(q2) : import_react.default.isValidElement(w2) ? U2 = import_react.default.cloneElement(w2, q2) : p(w2) ? U2 = w2 : D2 && (U2 = B.spinner()), import_react.default.createElement(y2, { isIn: M2, done: k2, position: h2, preventExitTransition: o2, nodeRef: s2 }, import_react.default.createElement("div", __spreadProps(__spreadValues({ id: R2, onClick: u2, className: S2 }, a2), { style: v2, ref: s2 }), import_react.default.createElement("div", __spreadProps(__spreadValues({}, M2 && { role: O2 }), { className: m(E2) ? E2({ type: d2 }) : clsx_m_default("Toastify__toast-body", E2), style: b2 }), U2 && import_react.default.createElement("div", { className: clsx_m_default("Toastify__toast-icon", { "Toastify--animate-icon Toastify__zoom-enter": !D2 }) }, U2), import_react.default.createElement("div", null, i2)), function(t3) {
    if (!t3)
      return;
    const n3 = { closeToast: g2, type: d2, theme: A2 };
    return m(t3) ? t3(n3) : import_react.default.isValidElement(t3) ? import_react.default.cloneElement(t3, n3) : void 0;
  }(r2), (c2 || z2) && import_react.default.createElement(P, __spreadProps(__spreadValues({}, I2 && !z2 ? { key: "pb-" + I2 } : {}), { rtl: x2, theme: A2, delay: c2, isRunning: n2, isIn: M2, closeToast: g2, hide: f2, type: d2, style: _2, className: C2, controlledProgress: z2, progress: N2 }))));
};
var k = E({ enter: "Toastify--animate Toastify__bounce-enter", exit: "Toastify--animate Toastify__bounce-exit", appendPosition: true });
var M = E({ enter: "Toastify--animate Toastify__slide-enter", exit: "Toastify--animate Toastify__slide-exit", appendPosition: true });
var D = E({ enter: "Toastify--animate Toastify__zoom-enter", exit: "Toastify--animate Toastify__zoom-exit" });
var w = E({ enter: "Toastify--animate Toastify__flip-enter", exit: "Toastify--animate Toastify__flip-exit" });
var A = (0, import_react.forwardRef)((t2, n2) => {
  const { getToastToRender: o2, containerRef: a2, isToastActive: r2 } = _(t2), { className: i2, style: c2, rtl: u2, containerId: d2 } = t2;
  function p2(e2) {
    const t3 = clsx_m_default("Toastify__toast-container", "Toastify__toast-container--" + e2, { "Toastify__toast-container--rtl": u2 });
    return m(i2) ? i2({ position: e2, rtl: u2, defaultClassName: t3 }) : clsx_m_default(t3, f(i2));
  }
  return (0, import_react.useEffect)(() => {
    n2 && (n2.current = a2.current);
  }, []), import_react.default.createElement("div", { ref: a2, className: "Toastify", id: d2 }, o2((t3, n3) => {
    const o3 = n3.length ? __spreadValues({}, c2) : __spreadProps(__spreadValues({}, c2), { pointerEvents: "none" });
    return import_react.default.createElement("div", { className: p2(t3), style: o3, key: "container-" + t3 }, n3.map((t4, o4) => {
      let { content: s2, props: a3 } = t4;
      return import_react.default.createElement(R, __spreadProps(__spreadValues({}, a3), { isIn: r2(a3.toastId), style: { "--nth": o4 + 1, "--len": n3.length }, key: "toast-" + a3.key, closeButton: a3.closeButton === true ? N : a3.closeButton }), s2);
    }));
  }));
});
A.displayName = "ToastContainer", A.defaultProps = { position: h.TOP_RIGHT, transition: k, rtl: false, autoClose: 5e3, hideProgressBar: false, closeButton: N, pauseOnHover: true, pauseOnFocusLoss: true, closeOnClick: true, newestOnTop: false, draggable: true, draggablePercent: 80, draggableDirection: "x", role: "alert", theme: "light" };
var F;
var S = /* @__PURE__ */ new Map();
var z = [];
function H() {
  return Math.random().toString(36).substring(2, 9);
}
function q(e2) {
  return e2 && (p(e2.toastId) || u(e2.toastId)) ? e2.toastId : H();
}
function U(e2, t2) {
  return S.size > 0 ? C.emit(0, e2, t2) : z.push({ content: e2, options: t2 }), t2.toastId;
}
function Q(e2, t2) {
  return __spreadProps(__spreadValues({}, t2), { type: t2 && t2.type || e2, toastId: q(t2) });
}
function G(e2) {
  return (t2, n2) => U(t2, Q(e2, n2));
}
function W(e2, t2) {
  return U(e2, Q(T.DEFAULT, t2));
}
W.loading = (e2, t2) => U(e2, Q(T.DEFAULT, __spreadValues({ isLoading: true, autoClose: false, closeOnClick: false, closeButton: false, draggable: false }, t2))), W.promise = function(e2, t2, n2) {
  let o2, { pending: s2, error: a2, success: r2 } = t2;
  s2 && (o2 = p(s2) ? W.loading(s2, n2) : W.loading(s2.render, __spreadValues(__spreadValues({}, n2), s2)));
  const i2 = { isLoading: null, autoClose: null, closeOnClick: null, closeButton: null, draggable: null, delay: 100 }, c2 = (e3, t3, s3) => {
    if (t3 == null)
      return void W.dismiss(o2);
    const a3 = __spreadProps(__spreadValues(__spreadValues({ type: e3 }, i2), n2), { data: s3 }), r3 = p(t3) ? { render: t3 } : t3;
    return o2 ? W.update(o2, __spreadValues(__spreadValues({}, a3), r3)) : W(r3.render, __spreadValues(__spreadValues({}, a3), r3)), s3;
  }, l = m(e2) ? e2() : e2;
  return l.then((e3) => c2("success", r2, e3)).catch((e3) => c2("error", a2, e3)), l;
}, W.success = G(T.SUCCESS), W.info = G(T.INFO), W.error = G(T.ERROR), W.warning = G(T.WARNING), W.warn = W.warning, W.dark = (e2, t2) => U(e2, Q(T.DEFAULT, __spreadValues({ theme: "dark" }, t2))), W.dismiss = (e2) => C.emit(1, e2), W.clearWaitingQueue = function(e2) {
  return e2 === void 0 && (e2 = {}), C.emit(5, e2);
}, W.isActive = (e2) => {
  let t2 = false;
  return S.forEach((n2) => {
    n2.isToastActive && n2.isToastActive(e2) && (t2 = true);
  }), t2;
}, W.update = function(e2, t2) {
  t2 === void 0 && (t2 = {}), setTimeout(() => {
    const n2 = function(e3, t3) {
      let { containerId: n3 } = t3;
      const o2 = S.get(n3 || F);
      return o2 ? o2.getToast(e3) : null;
    }(e2, t2);
    if (n2) {
      const { props: o2, content: s2 } = n2, a2 = __spreadProps(__spreadValues(__spreadValues({}, o2), t2), { toastId: t2.toastId || e2, updateId: H() });
      a2.toastId !== e2 && (a2.staleId = e2);
      const r2 = a2.render || s2;
      delete a2.render, U(r2, a2);
    }
  }, 0);
}, W.done = (e2) => {
  W.update(e2, { progress: 1 });
}, W.onChange = (e2) => (C.on(4, e2), () => {
  C.off(4, e2);
}), W.POSITION = h, W.TYPE = T, C.on(2, (e2) => {
  F = e2.containerId || e2, S.set(F, e2), z.forEach((e3) => {
    C.emit(0, e3.content, e3.options);
  }), z = [];
}).on(3, (e2) => {
  S.delete(e2.containerId || e2), S.size === 0 && C.off(0).off(1).off(5);
});
export {
  k as Bounce,
  w as Flip,
  B as Icons,
  M as Slide,
  A as ToastContainer,
  D as Zoom,
  v as collapseToast,
  E as cssTransition,
  W as toast,
  L as useToast,
  _ as useToastContainer
};
//# sourceMappingURL=react-toastify.js.map
